#!/bin/bash
source $(dirname ${BASH_SOURCE})/../../shf3/lib/header
import gui

vsts_vstrans="vstrans"
vsts_vsposcar="vsposcar"
vsts_vmdsrv="vmdsrv/stdin"

function help/vsts() {
  cat << EOF
Usage: ${gbn} options
              -i input
              -t "trans1.tf trans2.tf ..."
              -c vmd control
EOF
exit 1
}

function vsts/trans() {
  local _trs="${1}"
  local _inp="${2}"
  local _out="${3}"
  # crop
  ${vsts_vstrans}  -i ${_inp} -o ${_out} -t ${_trs}
  # xyz
  ${vsts_vsposcar} -i ${_out} -o ${_out%%.POSCAR} -x
}

function vsts/load() {
  local _f="${1}"
  if ! test -r "${_f}" ; then
    msg "Not found: ${_f}"
    return ${_false_}
  fi
  local _t=$(basename "${_f}")
  _t="${_t##*.}"
  case "${_t}" in
    CONTCAR|geom)
      _t="POSCAR";;
  esac

  if ! test -z "${vsts_vmdsrv}" ; then
    if ! test -r "${vsts_vmdsrv}" ; then
      msg "VMD control not found"
      return ${_false_}
    fi
    echo "mol load ${_t} ${_f}" > "${vsts_vmdsrv}"
  fi
}

### args
inp="POSCAR"
trans="trans.tf"

while getopts hvi:t:c: o; do
  case "$o" in
    i) inp=$OPTARG;;
    t) trans="${OPTARG}";;
    c) vsts_vmdsrv="${OPTARG}";;
    v) gdbg=true;
       vsts_vstrans="${vsts_vstrans} -w";
       vsts_vsposcar="${vsts_vsposcar} -w";
       ;;
    h|*) help/vsts;;
  esac
done


### main
gui/header

if ! test -r "${inp}" ; then
  msg "Input not found: ${inp}"
  exit 1
fi

if test -z "${trans}" ; then
  help/vsts
fi

answer "Show input?"
if test $? -eq 0 ; then
  vsts/load "${inp}"
fi

for i in ${trans} ; do
  if ! test -r "${i}" ; then
    msg "Not found: ${i}"
    exit 1
  fi
  pre="${gbn}.${i%%.*}"
  out="${pre}.POSCAR"

  echo ""
  answer "Execute transformation: ${i}?"
  if test $? -gt 0 ; then
    exit 1
  fi

  vsts/trans "${i}" "${inp}" "${out}"
  if test $? -gt 0 ; then
    exit 1
  fi
  vsts/load "${out}"
  inp="${out}"
done
